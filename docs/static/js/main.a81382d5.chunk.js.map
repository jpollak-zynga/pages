{"version":3,"sources":["zynga.svg","tile.svg","GoalComponent.tsx","GoalListComponent.tsx","Goals.ts","isWord.tsx","TileDefinitions.tsx","WordFinder.ts","MenuItemComponent.tsx","MainMenuComponent.tsx","Globals.ts","App.tsx","InviteComponent.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","GoalComponent","_React$PureComponent","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","props","mode","renderVertical","renderHorizontal","react_default","a","createElement","Row_default","id","className","Col_default","md","Badge_default","variant","goal","type","description","pill","points","xs","React","PureComponent","GoalListComponent","_this$props","goals","move","pendingMove","canPlay","board","Card_default","Header","Body","map","index","possible","classNames","check","compact","join","GoalComponent_GoalComponent","_this$props2","Fragment","Goal","letters","t","letter","possibleWithBoard","word","checkWord","VerbGoal","_Goal","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","includes","endsWith","json","VerbPastGoal","_Goal2","_getPrototypeOf3","_this2","_len3","_key3","DoublesGoal","_Goal3","_this3","get","split","StartsWithGoal","_Goal4","_this4","startsWith","CheapskateGoal","filter","e","some","LengthGoal","TRIE","require","find","forEach","tile","toLocaleLowerCase","TileDefinition","_class","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","count","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","TileDefinitions","_class3","TileSet","name","tiles","_descriptor4","_descriptor5","WordFinder","width","onWordFound","y","x","seed","search","pos","result","push","adjacent","info","prefix","next","getOwnPropertyNames","validIndex","indexOf","valid","splice","getPrefixInfo","undefined","adjacentFree","nextPos","nextTile","toLowerCase","toConsumableArray","MenuItemComponent","icon","badge","title","disabled","onClick","onClickDisabled","react","Figure_default","Image","src","MainMenuComponent","show","hide","canReset","reset","canPass","passWillEndGame","pass","usedNuke","noMoreTiles","nuke","nukeTitle","Modal_default","onHide","backdrop","MenuItemComponent_MenuItemComponent","Error","phone","window","innerWidth","MoveTypes","InviteComponent","gameUrl","playerName","changePlayerName","play","dismiss","scrollable","closeButton","Title","lib_default","size","Caption","href","target","rel","Form_default","Group","Label","Control","placeholder","DEFAULT_PLAYER_NAME","onChange","event","Button_default","style","Footer","Component","DEFAULT_OPTIONS","oneScoochPerTurn","bonusForLongerWords","UID","classes","playerScore","player","words","i","bonusPoints","reduce","b","getTileSet","tileSetName","TileSets","APP_ID","App","_React$Component","automation","loadGameId","forcePushGameData","batonTimeout","tickInterval","pollInterval","automateInterval","pushImmediate","getToken","auth","password","deviceIdentifier","userId","authUserId","setState","loading","fetch","method","body","JSON","stringify","appId","headers","Content-Type","then","response","status","console","error","statusText","token","objectSpread","onAuthenticated","catch","localStorage","setItem","setInterval","poll","automate","gameId","pullGameData","state","lastSavedState","updateProhibited","gameStateLocked","newBaton","myUserId","timeout","Date","now","boardStateSource","stateToJson","boardState","needsPush","diff","parse","warn","stateChangesWhileNotMyTurn","baton","gameStateVersion","Authorization","accessType","sessionStorage","meta","onExchange","aIndex","findIndex","bIndex","reordered","newIndex","scooched","changeOptions","change","options","resetOptions","canSelect","seedTile","indexRow","Math","floor","seedRow","abs","canScooch","keyA","keyB","getIndex","tick","myPlayer","_loop","_i","space","bag","j","random","drop","original","pendingDrops","clearDrops","pop","forceUpdate","availableLetters","sample","uniqBy","shift","onClickItem","onNuke","onPass","onPlay","_this$state","players","playerIndex","canNuke","automated","possibilities","findWords","sort","tilePoints","tileSelected","onSmear","toString","preserveIndex","tileToDeselect","smeared","showMenu","menuState","open","hideMenu","onReset","nukers","passers","over","playedWord","tileBonusPoints","unshift","drops","playMove","announceGoal","without","getItem","tileSet","data","uuid","announcements","newGame","query","queryString","location","_response$meta","hydrateAppState","ensureParticipant","prevProps","prevState","clearTimeout","setTimeout","solo","history","pushState","path","baseState","omit","clearInterval","unassignedPlayer","Alert_default","Heading","selectableLetters","onDone","playLabel","isWord","scoredPlayers","score","overHeader","stars","playedTile","starsString","renderPlayers","renderModal","item","backgroundImage","backgroundSize","backgroundRepeat","onAnimationEnd","message","SlideGrid","canExchange","tap","done","smear","exchange","sm","ButtonGroup_default","GoalListComponent_GoalListComponent","_this5","itIsMyTurn","currentPlayer","leftSide","image","Image_default","zynga","roundedCircle","nameAndScore","_this$state2","renderQrDialog","renderMainMenu","_this6","InviteComponent_InviteComponent","passWillResign","MainMenuComponent_MainMenuComponent","assign","announce","distance","_this7","_this8","zid","_this9","_loop2","_loop3","hydrateGoals","fromJson","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a81382d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zynga.ffedddac.svg\";","module.exports = __webpack_public_path__ + \"static/media/tile.e1eb2eab.svg\";","import {IGoal} from 'Goals';\nimport React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Row from 'react-bootstrap/Row';\nimport \"Goals.css\";\nimport tile from \"tile.svg\";\n\nexport class GoalComponent extends React.PureComponent<{\n    mode: \"vertical\" | \"horizontal\",\n    goal: IGoal,\n    id: number,\n    className: string,\n}> {\n    public render() {\n        switch (this.props.mode) {\n            case \"vertical\":\n                return this.renderVertical();\n            case \"horizontal\":\n                return this.renderHorizontal();\n        }\n    }\n\n    private renderVertical() {\n        return (\n            <Row key={this.props.id} className={this.props.className}>\n                <Col md={10}>\n                    <Badge variant=\"warning\">{this.props.goal.type}</Badge>\n                    <br/>\n                    {this.props.goal.description}\n                </Col>\n                <Col md={2}>\n                    <Badge variant=\"success\" pill={true}>\n                        +{this.props.goal.points}\n                    </Badge>\n                </Col>\n            </Row>\n        );\n    }\n    private renderHorizontal() {\n        return (\n            <Col key={this.props.id} className={this.props.className} xs={4}>\n                <div>\n                <Row>\n                    <div className=\"bonus-circle\">\n                        +{this.props.goal.points}\n                    </div>\n                </Row>\n                <Row>\n                <Col className=\"flex-grow\">\n                        {this.props.goal.description}\n                    </Col>\n                </Row>\n                </div>\n            </Col>\n        );\n    }\n}\n","import {ITile} from 'App';\nimport {GoalComponent} from 'GoalComponent';\nimport {IGoal} from 'Goals';\nimport compact from 'lodash/compact';\nimport {IPlay} from 'Move';\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport class GoalListComponent extends React.PureComponent<{\nmode: \"vertical\" | \"horizontal\",\n  goals: IGoal[];\n  pendingMove: IPlay;\n  board: ITile[];\n  canPlay: boolean;\n}> {\n    public render() {\n        switch (this.props.mode) {\n            case \"vertical\":\n                return this.renderVertical();\n            case \"horizontal\":\n                return this.renderHorizontal();\n        }\n    }\n\n    private renderVertical() {\n        const {goals, pendingMove: move, canPlay, board} = this.props;\n\n        return <Card>\n            <Card.Header>Goals</Card.Header>\n            <Card.Body>\n                {goals.map((goal, index) => {\n                    const possible = goal.possible(board);\n                    const thisMoveQualifies = canPlay && goal.check(move);\n                    const classNames = ['goal', thisMoveQualifies && 'qualifies', possible && 'possible'];\n                    const className = compact(classNames).join(' ')\n                    return <GoalComponent goal={goal} id={index} key={index} className={className}\n                                          mode={\"horizontal\"}/>;\n                })}\n            </Card.Body>\n        </Card>;\n    }\n\n    private renderHorizontal() {\n        const {goals, pendingMove: move, canPlay, board} = this.props;\n\n        return <><Row className=\"goals-header\">\n            <Col xs={1}/>\n            <Col className=\"hr flex-grow\"/>\n            <Col className=\"goals-title\" xs={\"auto\"}>Goals</Col>\n            <Col className=\"hr flex-grow\"/>\n            <Col xs={1}/>\n        </Row>\n        <Row className={\"goals-horizontal\"}>\n                {goals.map((goal, index) => {\n                    const possible = goal.possible(board);\n                    const thisMoveQualifies = canPlay && goal.check(move);\n                    const classNames = ['goal', thisMoveQualifies && 'qualifies', possible && 'possible'];\n                    const className = compact(classNames).join(' ')\n                    return <GoalComponent goal={goal} id={index} key={index} className={className}\n                                          mode={\"horizontal\"}/>;\n                })}\n        </Row></>;\n    }\n}\n","import { ITile } from './App';\nimport { IPlay } from \"./Move\";\n\ntype GoalType = 'Get Moving' | 'Over It' | 'Double Up' | 'Up Front' | 'Cheapskate' | 'Shortie';\n\nexport interface IGoal {\n    type: GoalType;\n    description: string;\n    points: number;\n    possible(board: ITile[]): boolean | \"maybe\";\n    check(move: IPlay): boolean;\n}\n\nabstract class Goal implements IGoal {\n    abstract type: GoalType;\n    abstract get description(): string;\n    abstract points: number;\n    possible(board: ITile[]) {\n        const letters = board.map((t) => t.letter).join(\"\");\n        return this.possibleWithBoard(letters);\n    }\n    check(move: IPlay): boolean {\n        const word = move.word.map((t) => t.letter).join(\"\");\n        return this.checkWord(word);\n    }\n    abstract possibleWithBoard(board: string): boolean;\n    abstract checkWord(word: string): boolean;\n}\n\nexport class VerbGoal extends Goal {\n    type = \"Get Moving\" as GoalType;\n    description = \"Play something ending in 'ing'\";\n    points = 10;\n    possibleWithBoard(board: string) {\n        return board.includes(\"I\") &&board.includes(\"N\") &&board.includes(\"G\");        \n    }\n    checkWord(word: string): boolean {\n        return word.endsWith(\"ING\");\n    }\n    public static fromJson(json: any) {\n        return new VerbGoal();\n    }\n}\n\nexport class VerbPastGoal extends Goal {\n    type = \"Over It\" as GoalType;\n    description = \"Play something ending in 'ed'\";\n    points = 8;\n    possibleWithBoard(board: string) {\n        return board.includes(\"E\") &&board.includes(\"D\");        \n    }\n    checkWord(word: string): boolean {\n        return word.endsWith(\"ED\");\n    }\n    public static fromJson(json: any) {\n        return new VerbPastGoal();\n    }\n}\n\nexport class DoublesGoal extends Goal {\n    type = \"Double Up\" as GoalType;\n    get description() { return `Play something with two '${this.letter}'s`; }\n    points = 7;\n    private readonly letter: string;\n    constructor(letter: string) {\n        super();\n        this.letter = letter;\n    }\n    possibleWithBoard(board: string) {\n        return board.split(this.letter).length >= 3;\n    }\n    checkWord(word: string): boolean {\n        return word.split(this.letter).length >= 3;\n    }\n    public static fromJson(json: any) {\n        return new DoublesGoal(json.letter);\n    }\n}\n\nexport class StartsWithGoal extends Goal {\n    type = \"Up Front\" as GoalType;\n    get description() { return `Play something that starts with '${this.letter}'`; }\n    points = 5;\n    private readonly letter: string;\n    constructor(letter: string) {\n        super();\n        this.letter = letter;\n    }\n    possibleWithBoard(board: string) {\n        return board.split(this.letter).length >= 2;\n    }\n    checkWord(word: string): boolean {\n        return word.startsWith(this.letter);\n    }\n    public static fromJson(json: any) {\n        return new StartsWithGoal(json.letter);\n    }\n}\n\nexport class CheapskateGoal implements IGoal {\n    possible(board: ITile[]) {\n        if (board.filter((e) => (e.points || 0) < 2).length >= 3) {\n            return \"maybe\";\n        }\n        return false;\n    }\n    check(move: IPlay): boolean {\n        return !move.word.some((t) => (t.points || 0) > 2);\n    }\n    type = \"Cheapskate\" as GoalType;\n    get description() { return `Only use tiles worth one or two points`; }\n    points = 10;\n    public static fromJson(json: any) {\n        return new CheapskateGoal();\n    }\n}\n\nexport class LengthGoal implements IGoal {\n    length: number;\n    constructor(length: number) {\n        this.length = length;\n    }\n    possible(board: ITile[]) {\n        return true;\n    }\n    check(move: IPlay): boolean {\n        return move.word.length === this.length;\n    }\n    type = \"Shortie\" as GoalType;\n    get description() { return `Play something ${this.length} letters long`; }\n    points = 10;\n    public static fromJson(json: any) {\n        return new LengthGoal(json.length);\n    }\n}\n","export type TrieEntry = Trie | 1 | undefined;\nexport type Word = Array<{ letter: string }>;\n\ninterface Trie {\n  [key: string]: TrieEntry,\n}\n\nconst TRIE: Trie = require(\"./trie.json\");\n\nfunction find(word: Word) {\n  let t: TrieEntry = TRIE;\n  word.forEach((tile) => {\n    if (typeof t === \"object\") {\n      t = t[tile.letter.toLocaleLowerCase()];\n    }\n  });\n  return t;\n}\n\nexport default function isWord(word: Word) {\n  const t = find(word);\n  return typeof t === \"object\" && t[\"_\"] === 1;\n}\n\nexport function getPrefixInfo(prefix: Word) {\n  const t = find(prefix);\n  if (typeof t !== \"object\") {\n    return undefined;\n  }\n  const next = Object.getOwnPropertyNames(t);\n  const validIndex = next.indexOf(\"_\");\n  const valid = validIndex >= 0;\n  if (valid) {\n    next.splice(validIndex, 1);\n  }\n  if (next.length === 0) {\n    return true;\n  }\n  return { valid, next }\n}\n","import {observable} from \"mobx\";\n\nexport interface ITileDefinition {\n  letter: string;\n  count: number;\n  points: number;\n}\n\nexport class TileDefinition implements ITileDefinition {\n  @observable\n  public letter: string;\n\n  @observable\n  public count: number;\n\n  @observable\n  public points: number;\n\n  constructor(props: ITileDefinition) {\n    this.letter = props.letter;\n    this.count = props.count;\n    this.points = props.points;\n  }\n}\n\nexport interface ITileSet {\n  name: string;\n  tiles: ITileDefinition[];\n}\n\nexport class TileSet implements ITileSet {\n  @observable\n  public name: string;\n  \n  @observable\n  public tiles: ITileDefinition[];\n\n  constructor(name?: string, tiles?: ITileDefinition[]) {\n    this.name = name || \"Untitled\";\n    this.tiles = tiles || [];\n  }\n}\n\nconst DefaultTileDefinitions = [\n{\n    letter: \"A\",\n    count: 9,\n    points: 1,\n  },\n  {\n    letter: \"B\",\n    count: 2,\n    points: 4,\n  },\n  {\n    letter: \"C\",\n    count: 2,\n    points: 4,\n  },\n  {\n    letter: \"D\",\n    count: 5,\n    points: 2,\n  },\n  {\n    letter: \"E\",\n    count: 13,\n    points: 1,\n  },\n  {\n    letter: \"F\",\n    count: 2,\n    points: 4,\n  },\n  {\n    letter: \"G\",\n    count: 3,\n    points: 3,\n  },\n  {\n    letter: \"H\",\n    count: 4,\n    points: 3,\n  },\n  {\n    letter: \"I\",\n    count: 6,\n    points: 1,\n  },\n  {\n    letter: \"J\",\n    count: 1,\n    points: 10,\n  },\n  {\n    letter: \"K\",\n    count: 1,\n    points: 5,\n  },\n  {\n    letter: \"L\",\n    count: 4,\n    points: 2,\n  },\n  {\n    letter: \"M\",\n    count: 2,\n    points: 4,\n  },\n  {\n    letter: \"N\",\n    count: 5,\n    points: 2,\n  },\n  {\n    letter: \"O\",\n    count: 8,\n    points: 1,\n  },\n  {\n    letter: \"P\",\n    count: 2,\n    points: 4,\n  },\n  {\n    letter: \"Q\",\n    count: 1,\n    points: 10,\n  },\n  {\n    letter: \"R\",\n    count: 6,\n    points: 1,\n  },\n  {\n    letter: \"S\",\n    count: 5,\n    points: 1,\n  },\n  {\n    letter: \"T\",\n    count: 7,\n    points: 1,\n  },\n  {\n    letter: \"U\",\n    count: 4,\n    points: 2,\n  },\n  {\n    letter: \"V\",\n    count: 2,\n    points: 5,\n  },\n  {\n    letter: \"W\",\n    count: 2,\n    points: 4,\n  },\n  {\n    letter: \"X\",\n    count: 1,\n    points: 8,\n  },\n  {\n    letter: \"Y\",\n    count: 2,\n    points: 3,\n  },\n  {\n    letter: \"Z\",\n    count: 1,\n    points: 10,\n  },\n].map((e) => new TileDefinition(e));\n\nconst DefaultTileSet: ITileSet = new TileSet(\"Default\",  DefaultTileDefinitions)\n\nexport default [DefaultTileSet];\n","import { ITile } from 'App';\nimport { getPrefixInfo } from './isWord';\n\nexport default class WordFinder {\n    private board: ITile[];\n    private width: number;\n    private onWordFound: (word: ITile[]) => void;\n\n    constructor(board: ITile[], width: number, onWordFound: (word: ITile[]) => void) {\n        this.board = board;\n        this.width = width;\n        this.onWordFound = onWordFound;\n    }\n\n    public findWords() {\n        for (let y = 0; y < this.board.length / this.width; y++) {\n            for (let x = 0; x < this.width; x++) {\n                const seed = this.width * y + x;\n                this.search(seed, []);\n            }            \n        }\n    }\n\n    private adjacent(pos: number) {\n        const {board, width} = this;\n        const x = pos % width;\n        const y = (pos - x) / width;\n        const result: number[] = [];\n        if (x > 0) {\n            result.push(pos - 1);\n            if (y > 0) {\n                result.push(pos - 1 - width);\n            }\n            if (y < (board.length / width) - 1) {\n                result.push(pos - 1 + width);\n            }\n        }\n        if (y > 0) {\n            result.push(pos - width);\n        }\n        if (x < width - 1) {\n            result.push(pos + 1);\n            if (y > 0) {\n                result.push(pos + 1 - width);\n            }\n            if (y < (board.length / width) - 1) {\n                result.push(pos + 1 + width);\n            }\n        }\n        if (y < (board.length / width) - 1) {\n            result.push(pos + width);\n        }\n        return result;\n    }\n\n    private adjacentFree(pos: number, word: ITile[]) {\n        return this.adjacent(pos).filter((e) => {\n            const tile = this.board[e];\n            if (tile.type !== \"letter\") {\n                return false;\n            }\n            if (word.includes(tile)) {\n                return false;\n            }\n            return true;\n        });\n    }\n\n    private search(pos: number, word: ITile[]) {\n        const tile = this.board[pos];\n        if (tile.type !== \"letter\") {\n            return;\n        }\n        word.push(tile);\n        const info = getPrefixInfo(word);\n        if (info === undefined) {\n            return;\n        }\n        if (info === true || info.valid) {\n            this.onWordFound(word);\n        }\n        if (info !== true) {\n            const af = this.adjacentFree(pos, word);\n            af.forEach((nextPos) => {\n                const nextTile = this.board[nextPos];\n                if (info.next.includes(nextTile.letter.toLowerCase())) {\n                    this.search(nextPos, [...word]);\n                }\n            });\n        }\n    }\n}\n","import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport * as React from \"react\";\nimport Figure from \"react-bootstrap/Figure\";\nimport Badge from \"react-bootstrap/Badge\";\nimport compact from \"lodash/compact\";\n\ninterface IMenuItemProps {\n    icon: string;\n    title: string;\n    description: string;\n    disabled?: boolean;\n    badge?: string | number;\n    onClick(): void;\n    onClickDisabled?(): void;\n}\n\nexport default class MenuItemComponent extends React.Component<IMenuItemProps> {\n    render() {\n        const {icon, badge, title, description, disabled, onClick, onClickDisabled} = this.props;\n        return <Row className={compact([\"menu-item\", disabled && \"disabled\"]).join(\" \")} onClick={disabled ? onClickDisabled : onClick}>\n            <Col xs={2} className=\"left\">\n                <Figure>\n                    <Figure.Image src={icon}/>\n                </Figure>\n            </Col>\n            <Col className={\"right flex-grow\"}>\n                <Row>\n                    <Col className={\"title flex-grow\"}>\n                        {title}\n                    </Col>\n                    <Col xs={\"auto\"}>\n                        {badge && <Badge variant={\"success\"} pill={true}>{badge}</Badge>}\n                    </Col>\n                </Row>\n                <Row className={\"description\"}>\n                    <Col className={\"flex-fill\"}>\n                        <span>\n                            {description}\n                        </span>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>;\n    }\n}\n","import Modal from \"react-bootstrap/Modal\";\nimport \"Menus.css\";\nimport MenuItemComponent from \"./MenuItemComponent\";\nimport * as React from \"react\";\nimport tile from \"tile.svg\";\n\ninterface IMainMenuProps {\n    show: boolean;\n    hide(): void;\n\n    help?(section: \"how-to\"): void;\n\n    canReset: boolean;\n    reset(): void;\n\n    usedNuke: boolean;\n    noMoreTiles: boolean;\n    nuke(): void;\n\n    canPass: boolean;\n    passWillEndGame: boolean;\n    pass(): void;\n}\n\nexport default class MainMenuComponent extends React.Component<IMainMenuProps> {\n    public render() {\n        const {show, hide,\n\n            canReset, reset,\n            canPass, passWillEndGame, pass,\n\n            usedNuke, noMoreTiles, nuke} = this.props;\n\n        let nukeTitle = \"Discard all tiles and draw new ones. You may only do this once per game.\";\n        if (usedNuke) {\n            nukeTitle = \"You may only use the nuclear option once per game.\";\n        } else if (noMoreTiles) {\n            nukeTitle = \"It’s too late to use the nuclear option.\";\n        }\n\n        return <Modal className=\"main-menu\" show={show} onHide={hide} backdrop={true}>\n            <Modal.Body>\n                <MenuItemComponent\n                    title={\"How to Play\"}\n                    description={\"Getting started and rules of the game\"}\n                    icon={tile}\n                    disabled={true}\n                    onClick={() => {throw new Error(\"Not Implemented\")}}\n                />\n\n                <MenuItemComponent\n                    title={\"Dictionary\"}\n                    description={\"Information about which words are acceptable\"}\n                    icon={tile}\n                    disabled={true}\n                    onClick={() => {throw new Error(\"Not Implemented\")}}\n                />\n\n                <MenuItemComponent\n                    title={\"Tile Distribution\"}\n                    description={\"How many tiles there are of each letter and how many remain in the bag\"}\n                    icon={tile}\n                    disabled={true}\n                    onClick={() => {throw new Error(\"Not Implemented\")}}\n                />\n\n                <MenuItemComponent\n                    title={\"Reset\"}\n                    description={\"Return tiles to their original positions, restoring their point values.\"}\n                    icon={tile}\n                    disabled={!canReset}\n                    onClick={reset}\n                />\n\n                <MenuItemComponent\n                    title={passWillEndGame ? \"Pass\" : \"Finish\"}\n                    description={passWillEndGame ? \"Finish the game\" : \"No moves? Pass your turn\"}\n                    icon={tile}\n                    disabled={!canPass}\n                    onClick={pass}\n                />\n\n                <MenuItemComponent\n                    title={\"Nuke\"}\n                    description={nukeTitle}\n                    icon={tile}\n                    badge={usedNuke ? 0 : 1}\n                    disabled={usedNuke}\n                    onClick={nuke}\n                />\n\n                <MenuItemComponent\n                    title={\"Resign\"}\n                    description={\"End this game, but it counts as a loss\"}\n                    icon={tile}\n                    disabled={true}\n                    onClick={() => {throw new Error(\"Not Implemented\")}}\n                />\n            </Modal.Body>\n        </Modal>;\n    }\n}\n","export function phone() {\n    return window.innerWidth < 576;\n}\n","import SlideGrid from '@pyrogenic/slide-grid/lib/SlideGrid';\nimport * as diff from \"deep-diff\";\nimport {GoalListComponent} from 'GoalListComponent';\nimport {CheapskateGoal, DoublesGoal, IGoal, LengthGoal, StartsWithGoal, VerbGoal, VerbPastGoal} from 'Goals';\nimport compact from 'lodash/compact';\nimport omit from 'lodash/omit';\nimport sample from 'lodash/sample';\nimport uniqBy from 'lodash/uniqBy';\nimport without from 'lodash/without';\nimport * as queryString from \"querystring\";\nimport React from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Row from 'react-bootstrap/Row';\nimport uuid from 'uuid/v4';\nimport './App.css';\nimport isWord from './isWord';\nimport {IPlay, IPlayedTile} from './Move';\nimport tile from \"./tile.svg\";\nimport TileSets from './TileDefinitions';\nimport WordFinder from './WordFinder';\nimport MainMenuComponent from \"./MainMenuComponent\";\nimport InviteComponent from \"./InviteComponent\";\nimport {phone} from \"./Globals\";\nimport zynga from \"zynga.svg\";\nimport IPlayer from \"./IPlayer\";\n\nconst PLAYER_NAME_KEY = \"PlayerName\";\n\nexport const DEFAULT_PLAYER_NAME = \"Anonymous\";\n\nexport interface ITile {\n  type: \"letter\" | \"space\" | \"drop\";\n  id: string;\n  letter: string;\n  points: number;\n  renderIndex?: number;\n  drop: number;\n}\n\nenum MoveTypes {\n  pass = \"pass\",\n  nuke = \"nuke\",\n  play = \"play\",\n}\n\ntype Variant = undefined\n  | 'primary'\n  | 'secondary'\n  | 'success'\n  | 'danger'\n  | 'warning'\n  | 'info'\n  | 'dark'\n  | 'light'\n  | 'link'\n  | 'outline-primary'\n  | 'outline-secondary'\n  | 'outline-success'\n  | 'outline-danger'\n  | 'outline-warning'\n  | 'outline-info'\n  | 'outline-dark'\n  | 'outline-light';\n\ntype BadgeVariant = Exclude<Variant, \"link\"\n  | \"outline-primary\"\n  | 'outline-secondary'\n  | 'outline-success'\n  | 'outline-danger'\n  | 'outline-warning'\n  | 'outline-info'\n  | 'outline-dark'\n  | 'outline-light'>;\n\nconst MOVE_VARIANTS: { [P in MoveTypes]: BadgeVariant } = {\n  play: \"primary\",\n  nuke: \"warning\",\n  pass: \"secondary\",\n};\n\nexport interface IScoochOptions {\n  solo?: boolean;\n  oneScoochPerTurn?: boolean;\n  tileSetName?: string;\n  bonusForLongerWords?: false | \"constant\" | \"linear\";\n}\n\nconst DEFAULT_OPTIONS: IScoochOptions = {\n  oneScoochPerTurn: true,\n  bonusForLongerWords: \"linear\",\n}\n\ntype IAutomationAction = {\n  type: \"tap\", a: string,\n} | {\n  type: \"scooch\",\n  a: string,\n  b: string,\n} | {\ntype: \"submit\" | \"wait\" | \"nuke\" | \"pass\",\n}\n\nlet UID = 1;\n\ninterface IMenuState {\n  open?: boolean;\n}\n\ninterface IAnnouncement {\n  key: number,\n  title: string,\n  message: string,\n}\n\n/**\n * State held in the conversation meta and thus shared between players\n */\n// TODO: unflatten IAppState to make code and logic easier to follow.\ninterface ISharedState {\n  /**\n   * Represents a \"reservation\" of the right to change game state.  Mostly it was to help people put their names in\n   * when it isn't their turn at the beginning, but may not actually be necessary if the version field is properly\n   * respected (i.e. checked agains the local state after join but before edit).\n   */\n  baton?: {\n    userId: string,\n    timeout: number,\n  },\n\n  /**\n   * Same as the conversation id\n   */\n  gameId: string;\n\n  /**\n   * Optimistic concurrency version number for {gameState}\n   */\n  gameStateVersion: number;\n\n  // Would be part of this object if not flattened into {IAppState}\n  // gameState: IGameState,\n}\n\ninterface IGameState {\n  players: IPlayer[];\n  playerIndex: number;\n  nukers: number[];\n  passers: number[];\n  over: boolean;\n  announcements: IAnnouncement[];\n  options: IScoochOptions;\n  bag: ITile[];\n  board: ITile[];\n  original: ITile[];\n  word: ITile[];\n  reordered: ITile[];\n  scooched?: string;\n  smeared?: boolean;\n  goals: IGoal[];\n}\n\ninterface IAppState extends ISharedState, IGameState {\n  loading: string;\n  menuState: IMenuState;\n}\n\nfunction classNames(...classes: Array<string | false | undefined>) {\n  classes = compact(classes);\n  if (classes.length === 0) {\n    return undefined;\n  }\n  return classes.join(\" \");\n}\n\nfunction playerScore(player: IPlayer) {\n  return player.words.map((i) => i.type === \"play\" ? i.points + i.bonusPoints : 0).reduce((a, b) => (a + b), 0);\n}\n\nfunction getTileSet(tileSetName?: string) {\n  return TileSets.find((e) => e.name === tileSetName) || TileSets[0]!\n}\n\nfunction newGame(players?: IPlayer[], tileSetName?: string): IAppState {\n  const board: ITile[] = [];\n  const bag: ITile[] = [];\n  let id = 0;\n  const tileSet = getTileSet(tileSetName);\n  tileSet.tiles.forEach((data) => {\n    for (let j = 0; j < data.count; j++) {\n      bag.push({\n        type: \"letter\",\n        id: `tile-${id++}`,\n        letter: data.letter,\n        points: data.points,\n        drop: 0,\n      })\n    }\n  });\n  for (let j = 0; j < 16; j++) {\n    board.push({\n      type: \"drop\",\n      id: `blank-${j}`,\n    } as ITile)\n  }\n  players = players || [];\n  players.forEach((player) => player.words = []);\n  const options = { ...DEFAULT_OPTIONS, tileSetName: tileSet.name };\n  const gameId = uuid();\n  return { menuState: {}, loading: \"bootstrap\", gameStateVersion: 1, gameId, players, playerIndex: 0, bag, board, original: Array(...board), word: [], reordered: [], nukers: [], passers: [], over: false, options, goals: [], announcements: [] };\n}\n\n// Cache of generated json data URLs\nconst JSON_TO_URL_DATA: { [key: string]: string } = {};\n\nfunction jsonToUrl(key: string, stuff: any) {\n  const data = new Blob([JSON.stringify(stuff)], { type: \"application/json\" });\n\n  // If we are replacing a previously generated file we need to\n  // manually revoke the object URL to avoid memory leaks.\n  if (JSON_TO_URL_DATA[key]) {\n    window.URL.revokeObjectURL(JSON_TO_URL_DATA[key]);\n  }\n\n  JSON_TO_URL_DATA[key] = window.URL.createObjectURL(data);\n\n  // returns a URL you can use as a href\n  return JSON_TO_URL_DATA[key];\n}\n\ninterface IAuth {\n  userId: string;\n  zid: string;\n  password: string;\n  token: string;\n}\n\nconst APP_ID =  5005139;\n\ninterface IQuery {\n  gameId?: string;\n}\n\nfunction getQuery() {\n  return queryString.parse(window.location.search.split(\"?\").pop() || \"\") as IQuery;\n}\n\nexport class App extends React.Component<{}, IAppState> {\n  private automation: IAutomationAction[] = [];\n  private loadGameId?: string;\n  private forcePushGameData?: boolean;\n\n  private batonTimeout?: any;\n  private tickInterval?: any;\n  private pollInterval?: any;\n  private automateInterval?: any;\n  private pushImmediate?: any;\n\n  constructor(props: any) {\n    super(props);\n\n    // This is the local pass-and-play implementation, left here for reference.\n    //\n    // const stateString = sessionStorage.getItem(\"boardState\");\n    // if (stateString) {\n    //   try {\n    //     const state = JSON.parse(stateString) as IAppState;\n    //     App.hydrateAppState(state);\n    //     this.state = state;\n    //     return;\n    //   } catch {\n    //     sessionStorage.clear();\n    //   }\n    // }\n\n    this.loadGameId = sessionStorage.getItem(\"gameId\") || undefined;\n    const menuState = JSON.parse(sessionStorage.getItem(\"menuState\") || \"{}\");\n    this.state = {...newGame(), menuState};\n  }\n\n  public componentDidMount(): void {\n    this.tickInterval = setInterval(this.tick, 100);\n    const query = getQuery();\n    this.loadGameId = query.gameId;\n    this.getToken();\n  }\n\n  private getToken = () => {\n    if (this.auth) {\n      return;\n    }\n    let password = this.deviceIdentifier;\n    let userId = this.authUserId;\n    if (userId === undefined) {\n      this.setState({loading: \"register-device\"}, () =>\n      fetch(\"https://api.zynga.com/auth/registerDevice\",\n          {method: \"POST\", body: JSON.stringify({password, appId: APP_ID}), headers: {\"Content-Type\": \"application/json\"}})\n          .then((response) => response.json())\n          .then((auth: IAuth) => {\n            //console.log({registerDevice: auth});\n            localStorage.setItem(\"DeviceIdentifier\", password);\n            localStorage.setItem(\"AuthUserId\", auth.userId);\n            this.getToken();\n          })\n          .catch(console.error));\n      return;\n     }\n    this.setState({loading: \"authenticating\"}, () =>\n   fetch(\"https://api.zynga.com/auth/issueToken\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({password, userId, appId: APP_ID}),\n          headers: {\"Content-Type\": \"application/json\"}\n        })\n        .then((response) => {\n          if (response.status < 400) {\n            return response.json();\n          } else {\n            console.error(response);\n            throw new Error(response.statusText);\n          }\n        })\n        .then((token) => {\n          if (token) {\n            //console.log({issueToken: token});\n            this.auth = {\n              password, userId, ...token,\n            };\n            this.onAuthenticated();\n          } else {\n            throw new Error(\"no json body\");\n          }\n        })\n        .catch(console.error));\n  }\n\n  private auth?: IAuth;\n\n  private get deviceIdentifier() {\n    return localStorage.getItem(\"DeviceIdentifier\") || uuid();\n  }\n\n  private get authUserId() {\n    return localStorage.getItem(\"AuthUserId\") || undefined;\n  }\n\n  private onAuthenticated = () => {\n    this.pollInterval = setInterval(this.poll, 5000);\n    this.automateInterval = setInterval(this.automate, 1000);\n    const gameId = this.loadGameId;\n    if (gameId) {\n      this.setState({loading: \"joining-game\"}, () =>\n          this.pullGameData(gameId));\n    }\n  };\n\n  private poll = () => {\n    if (!this.auth) {\n      return;\n    }\n    const gameId = this.loadGameId || this.state.gameId;\n    if (gameId) {\n      this.setState({loading: \"loading-game\"}, () =>\n        this.pullGameData(gameId));\n    }\n  }\n\n  private pullGameData(gameId: string) {\n    if (!this.auth) {\n      return;\n    }\n    fetch(\"https://api.zynga.com/conversation/join\",\n        {\n          method: \"POST\",\n          headers: {\"Content-Type\": \"application/json\", \"Authorization\": \"token \" + this.auth.token},\n          body: JSON.stringify({\n            accessType: \"public\",\n            id: gameId,\n          })\n        })\n        .then((response) => response.json())\n        .then((response) => {\n          const {baton, gameStateVersion, boardState} = response.meta;\n          this.batonTimeout = undefined;\n          if (typeof boardState === \"string\" && gameStateVersion > this.state.gameStateVersion) {\n            console.warn(`Pulled Game State: gameStateVersion ${this.state.gameStateVersion} => ${gameStateVersion}`);\n            const state: IAppState = JSON.parse(boardState) as IAppState;\n            const rawState: IAppState = JSON.parse(boardState) as IAppState;\n            App.hydrateAppState(state);\n            //console.log(explainDiff(diff.diff(rawState, state)));\n            this.setState({...state, baton, gameStateVersion, loading: \"ready\"} as any);\n            return;\n          } else {\n            this.setState({loading: \"ready\", baton}, this.ensureParticipant);\n          }\n        })\n        .catch(console.error);\n  }\n\n  /**\n   * Turn a serialized game state into a proper runtime state:\n   *  - ensure multiple serialization of the same object are turned back into references to a single object\n   *  - restore prototypes of objects that aren't pure state\n   *\n   * NB: this mutates {state} in-place\n   */\n  private static hydrateAppState(state: IAppState) {\n    // Restore object identities lost in serialization\n    // Any place where proper {ITile}s appear, we have to make sure they all reference the same object\n    for (let i = 0; i < state.word.length; i++) {\n      state.word[i] = state.board.find((tile) => tile.id === state.word[i].id)!;\n    }\n    for (let i = 0; i < state.reordered.length; i++) {\n      state.reordered[i] = state.board.find((tile) => tile.id === state.reordered[i].id)!;\n    }\n\n    // These were only for backwards-compatibility with state saved in {sessionStorage} but it's\n    // the sort of thing we schould consider doing if we add new required fields and don't want to break\n    // in-progress games.\n    //\n    // if (state.nukers === undefined) {\n    //   state.nukers = [];\n    // }\n    // if (state.passers === undefined) {\n    //   state.passers = [];\n    // }\n    // if (state.options === undefined) {\n    //   state.options = {};\n    // }\n    // if (state.announcements === undefined) {\n    //   state.announcements = [];\n    // }\n    // if (state.gameId === undefined) {\n    //   state.gameId = uuid();\n    // }\n\n    // Goals aren't plain-old-data-objects, so hydrate them\n    state.goals = this.hydrateGoals(state.goals || []);\n  }\n\n  private static hydrateGoals(goals: IGoal[]): IGoal[] {\n    return goals.map( (goal) => {\n        switch (goal.type) {\n          case \"Double Up\":\n            return DoublesGoal.fromJson(goal);\n          case \"Cheapskate\":\n            return CheapskateGoal.fromJson(goal);\n          case \"Get Moving\":\n            return VerbGoal.fromJson(goal);\n          case \"Over It\":\n            return VerbPastGoal.fromJson(goal);\n          case \"Shortie\":\n            return LengthGoal.fromJson(goal);\n          case \"Up Front\":\n            return StartsWithGoal.fromJson(goal);\n          default:\n            throw new Error(`Unknown goal type: ${goal.type}`);\n        }\n      });\n  }\n\n  private get myPlayer() {\n    if (!this.state.players) {\n      return undefined;\n    }\n    return this.state.players.find((p) => p.userId === this.myUserId);\n  }\n\n// private static finderUrl(gameId: string, gameStateVersion: number) {\n  // `  return `https://api.zynga.com/finder/app/${APP_ID}/index/${GAME_INDEX}/id/${gameId}?gameStateVersion=${gameStateVersion}`;\n  // }\n\n  private lastSavedState?: string;\n\n  private get itIsMyTurn() {\n    const myUserId = this.myUserId;\n    if (!myUserId) {\n      return false;\n    }\n    const currentPlayerUserId = this.currentPlayer.userId;\n    const isMyTurn = currentPlayerUserId === myUserId;\n    return isMyTurn;\n  }\n\n  private get currentPlayer() {\n    return this.state.players[this.state.playerIndex];\n  }\n\n  private get myUserId() {\n    if (!this.auth) {\n      return undefined;\n    }\n    return this.auth.zid;\n  }\n\n  public componentDidUpdate(prevProps: any, prevState: any) {\n    //console.log({componentDidUpdate: explainDiff(diff.diff(prevState, this.state))});\n    if (this.myPlayer && localStorage.getItem(PLAYER_NAME_KEY) !== this.myPlayer.name) {\n      localStorage.setItem(PLAYER_NAME_KEY, this.myPlayer.name);\n    }\n    if (!this.auth) {\n      return;\n    }\n    this.ensureParticipant();\n    if (this.state.reordered.length > 0 && (this.state.board.find((e, i) => this.state.original[i] !== e) === undefined)) {\n      this.setState({ reordered: [], scooched: undefined });\n    } else {\n      if (this.pushImmediate) {\n        clearTimeout(this.pushImmediate);\n      }\n      this.pushImmediate = setTimeout(this.push, 10);\n    }\n    if (this.state.baton) {\n      if (!this.batonTimeout) {\n        this.batonTimeout = setTimeout(() => this.setState((state) => {\n          this.batonTimeout = undefined;\n          if (state.baton && state.baton.timeout < Date.now()) {\n            return {baton: undefined};\n          }\n          return {};\n        }), this.state.baton.timeout - Date.now());\n      }\n    }\n    // Ensure that all participants have the same URL in their window so reloading doesn't start a new game:\n    if (this.state.options.solo !== undefined) {\n      if (window.location.href !== this.gameUrl) {\n        if (window.history.pushState) {\n          window.history.pushState({path: this.gameUrl}, '', this.gameUrl);\n        }\n      }\n    }\n    sessionStorage.setItem(\"menuState\", JSON.stringify(this.state.menuState));\n  }\n\n  private push = () => {\n    if (!this.auth) { return; }\n    const token = this.auth.token;\n    const updateProhibited = this.gameStateLocked;\n    const newBaton = {\n      userId: this.myUserId!,\n      timeout: Date.now() + 1000,\n    };\n    const boardStateSource = this.stateToJson(this.state);\n    const boardState = JSON.stringify(boardStateSource);\n    let needsPush = false;\n    if (this.lastSavedState) {\n      const stateDiff = diff.diff(JSON.parse(this.lastSavedState), JSON.parse(boardState));\n      //console.log({pushDiff: explainDiff(stateDiff)});\n      needsPush = !!stateDiff;\n    } else {\n      needsPush = true;\n    }\n    if (needsPush) {\n      //console.log(\"push!\");\n      if (!updateProhibited) {\n        this.forcePushGameData = false;\n        this.lastSavedState = boardState;\n        const {gameId} = this.state;\n        const gameStateVersion = this.state.gameStateVersion + 1;\n        fetch(\"https://api.zynga.com/conversation/join\",\n            {\n              method: \"POST\",\n              headers: {\"Content-Type\": \"application/json\", \"Authorization\": \"token \" + token},\n              body: JSON.stringify({\n                accessType: \"public\",\n                id: gameId,\n              })\n            })\n            .then((response) => response.json())\n            .then((response) => {\n              //console.log({join: response});\n              sessionStorage.setItem(\"gameId\", response.id);\n              // TODO: check our gameStateVersion against the one in the current meta to make sure we're not rewinding time.\n              return fetch(\"https://api.zynga.com/conversation/editConversationMeta\",\n                  {\n                    method: \"POST\",\n                    headers: {\"Content-Type\": \"application/json\", \"Authorization\": \"token \" + token},\n                    body: JSON.stringify({\n                      accessType: \"public\",\n                      id: gameId,\n                      meta: {baton: newBaton, gameStateVersion, boardState},\n                    })\n                  });\n            })\n            .then((response) => response.json())\n            .then((response) => {\n              //console.log({update: response});\n              this.batonTimeout = undefined;\n              this.setState({baton: newBaton, gameStateVersion});\n            })\n            .catch(console.error);\n      } else {\n        console.warn({\n          stateChangesWhileNotMyTurn: {\n            ...this.state,\n            loading: \"saved\", baton: undefined,\n            auth: undefined, gameStateVersion: undefined\n          }, lastSavedState: this.lastSavedState && JSON.parse(this.lastSavedState)\n        });\n      }\n    }\n  }\n\n  private stateToJson(baseState: IAppState) {\n    return omit(baseState, \"loading\", \"menuState\", \"baton\", \"auth\", \"gameStateVersion\");\n  }\n\n  componentWillUnmount(): void {\n    if (this.batonTimeout) {\n      clearTimeout(this.batonTimeout)\n    }\n    if (this.tickInterval) {\n      clearInterval(this.tickInterval)\n    }\n    if (this.pollInterval) {\n      clearInterval(this.pollInterval)\n    }\n    if (this.automateInterval) {\n      clearInterval(this.automateInterval)\n    }\n  }\n\n  private get gameStateLocked() {\n    return this.state.baton && this.state.baton.userId !== this.myUserId && this.state.baton.timeout > Date.now();\n  }\n\n  private ensureParticipant() {\n    const myPlayer = this.myPlayer;\n    if (myPlayer === undefined) {\n      let players = this.state.players;\n      const unassignedPlayer = players.find((e) => e.userId === undefined);\n      if (unassignedPlayer) {\n        unassignedPlayer.userId = this.myUserId;\n      } else {\n        players.push({name: localStorage.getItem(PLAYER_NAME_KEY) || DEFAULT_PLAYER_NAME, words: []});\n        this.forcePushGameData = true;\n      }\n      this.setState({players});\n    }\n  }\n\n  public render() {\n    if (this.myPlayer === undefined) {\n      return <Alert><Alert.Heading>Loading</Alert.Heading><p>{this.state.loading}</p></Alert>;\n    }\n    const tileSet = getTileSet(this.state.options.tileSetName);\n    // const totalTiles = tileSet.tiles.map((tile) => tile.count).reduce((a, b) => a + b);\n    // const totalPoints = tileSet.tiles.map((tile) => tile.count * tile.points).reduce((a, b) => a + b);\n    let selectableLetters = Array(...this.state.board);\n    if (this.state.word.length > 0) {\n      selectableLetters = selectableLetters.filter((tile, index) => this.canSelect(index));\n    }\n    let canPlay = false;\n    let playLabel = \"Too Short\";\n    if (this.state.word.length > 2) {\n      canPlay = isWord(this.state.word);\n      const word = this.state.word.map((tile) => tile.letter).join(\"\");\n      let points = this.state.word.map(this.tilePoints).reduce((a, b) => (a || 0) + (b || 0));\n      let bonusPoints = this.state.word.map(this.bonusPoints).reduce((a, b) => (a || 0) + (b || 0)) || 0;\n      bonusPoints = bonusPoints + this.state.goals.map((goal) => goal.check(this.pendingMove) ? goal.points : 0).reduce((a, b) => a + b, 0);\n      points = (points || 0) + bonusPoints;\n      if (canPlay) {\n        if (this.state.smeared) {\n          playLabel = `Release to play '${word}' for ${points || \"no\"} points`;\n        } else {\n          playLabel = `Play '${word}' for ${points || \"no\"} points`;\n        }\n      } else {\n        playLabel = `'${word}' is not a word`;\n      }\n    }\n \n    // If the player was smearing, auto-play if possible. \n    // If the player was tapping letters or scooching, though, don't do anything.\n    let onDone: ((key: string) => void) | undefined;\n    if (this.state.smeared) {\n      if (canPlay) {\n        onDone = this.onPlay;\n      } else {\n        onDone = (id) => {\n          // TODO: this should probably be an option\n          // deselect everything if the smear ends on a selected tile and the word's invalid,\n          // otherwise leave state unchanged (as in the end of a scooch)\n          const i = this.state.word.findIndex((tile) => tile.id === id);\n          //console.log({ id, word: this.state.word, i });\n          if (i >= 0) {\n            this.setState({ word: [] });\n          }\n        };\n      }\n    } else {\n      onDone = undefined;\n    }\n\n    const scoredPlayers = this.state.players.map((player) => {\n      const score = playerScore(player);\n      return { score, ...player };\n    }).sort((a, b) => b.score - a.score);\n    let overHeader = <Alert.Heading>{scoredPlayers[0].name} Wins!</Alert.Heading>;\n    if (scoredPlayers.find((e) => e.score !== scoredPlayers[0].score) === undefined) {\n      overHeader = <Alert.Heading>It’s a tie!</Alert.Heading>;\n    }\n\n    const yourPoints = this.state.players[0].words.map((play) => play.type === \"play\" ? play.points + play.bonusPoints : 0).reduce((a, b) => a + b, 0);\n    //const yourTiles = this.state.players[0].words.map((play) => play.type === \"play\" ? play.word.length : 0).reduce((a, b) => a + b, 0);\n    //const targetPoints = (yourTiles / totalTiles) * totalPoints;\n    const yourTargetPoints = this.state.players[0].words\n      .map((play) => play.type === \"play\" ? play.word : [])\n      .reduce((a, b) => a.concat(b), [])\n      .map((playedTile) => playedTile.letter)\n      .map((letter) => tileSet.tiles.find((e) => e.letter === letter)!.points)\n      .reduce((a, b) => a + b, 0) + this.state.players[0].words.length;\n    const stars = yourPoints - yourTargetPoints;\n    let starsString = \"\";\n    for (let i = 0; i < Math.abs(stars); ++i) {\n      starsString += \"★\";\n    }\n\n    const gameUrl = this.gameUrl;\n    return <>\n      {this.renderPlayers()}\n      <div className={phone() ? undefined : \"container-fluid\"}>\n      {this.renderModal()}\n      <Row>\n        <Col className={compact([\"col-sm-12\", \"col-xl-6\", \"board-col\", this.state.over && \"over\"]).join(\" \")}>\n          <Row>\n            <div className=\"play-area\">\n              {this.state.word.map((item, index) => (\n                  <div key={index} className=\"tile\">\n                    <div className=\"field\" style={{\n                      backgroundImage: `url(${tile})`,\n                      backgroundSize: 'contain',\n                      backgroundRepeat: 'no-repeat'\n                    }}>\n                      <div className=\"points\">{this.tilePoints(item) || <>&nbsp;</>}</div>\n                      <div className=\"letter\">{item.letter}</div>\n                      {this.bonusPoints(item) && <div className=\"bonus\">+{this.bonusPoints(item)}</div>}\n                    </div>\n                  </div>\n              ))}\n              {/* <div style={{marginTop: \"1rem\", textAlign: \"center\", border: \"1px solid black\"}}>★★★★★</div> */}\n              {this.state.word.length === 0 && <div className=\"tile space\"/>}\n              <div className=\"container\">\n                <div className=\"flex-grow\"/>\n              </div>\n            </div>\n          </Row>\n          <Row className=\"untouchable\">\n            {this.state.over &&\n            <div className=\"overlay\">\n              <Alert variant=\"success\" width=\"100%\">\n                {overHeader}\n                Final Score: {\n                scoredPlayers.map((player) => `${player.name}: ${player.score}`).join(\", \")\n              }\n              </Alert>\n            </div>}\n            {this.state.announcements &&\n            <div className=\"overlay\">\n              {this.state.announcements.map((a) =>\n                  <div key={a.key} className=\"announcement\"\n                       onAnimationEnd={() => this.setState((state) => ({announcements: without(state.announcements, a)}))}>\n                    <div className=\"title\">{a.title}</div>\n                    <div className=\"message\">{a.message}</div>\n                  </div>)}\n            </div>}\n            <SlideGrid\n                className=\"board\"\n                canExchange={this.canScooch}\n                tap={this.onClickItem}\n                done={onDone}\n                smear={this.onSmear}\n                exchange={this.onExchange}\n            >\n              {\n                this.state.board.map((item, index) => {\n                  const classes = [\"tile\"];\n                  if (this.state.word.includes(item)) {\n                    classes.push(\"selected\");\n                  }\n                  if (selectableLetters.indexOf(item) >= 0) {\n                    classes.push(\"selectable\");\n                  } else {\n                    classes.push(\"unselectable\");\n                  }\n                  if (this.canScooch(item.id)) {\n                    classes.push(\"swappable\");\n                  } else {\n                    classes.push(\"unswappable\");\n                  }\n                  if (item.type === \"space\") {\n                    classes.push(\"space\");\n                  }\n                  if (this.reordered(item)) {\n                    classes.push(\"reordered\");\n                  }\n                  if (this.state.options.oneScoochPerTurn && this.state.scooched === item.id) {\n                    classes.push(\"scooched\");\n                  }\n                  if ((index % 4) === 0) {\n                    classes.push(\"start-row\");\n                  }\n                  if (item.drop) {\n                    classes.push(`drop-${item.drop}`);\n                  }\n                  const id = item.id;\n                  return (\n                      <div className={classes.join(\" \")} key={id} id={id}>\n                        <div className=\"field\" style={{\n                          backgroundImage: `url(${tile})`,\n                          backgroundSize: 'contain',\n                          backgroundRepeat: 'no-repeat'\n                        }}>\n                          <div className=\"points\">{this.tilePoints(item) || <>&nbsp;</>}</div>\n                          <div className=\"letter\">{item.letter || <>&nbsp;</>}</div>\n                        </div>\n                      </div>\n                  );\n                })\n              }\n            </SlideGrid>\n          </Row>\n          <Row><Button\n              className={classNames(\"play-button\", canPlay && \"can-play\")}\n              variant={canPlay ? \"primary\" : \"outline-primary\"}\n              disabled={!canPlay}\n              onClick={this.onPlay}\n          >{playLabel}</Button>\n          </Row>\n          <Row className=\"board-footer\">\n            <Col sm={4} className=\"sm-right\">\n              <>\n                {gameUrl && this.state.players && this.state.players.length < 2 &&\n                <Button variant={this.state.options.solo ? \"outline-primary\" : \"primary\"}\n                        onClick={() => this.changeOptions(() => ({solo: undefined}))}>Invite a Friend</Button>}\n                {/* Solo Mode: {stars > 0 && \"+\"}{stars} */}\n                <span className={`stars ${stars >= 0 ? \"positive\" : \"negative\"}`}>{starsString}</span>\n                {/* Solo Mode: {yourPoints} / {yourTargetPoints} */}\n              </>\n            </Col>\n            <Col sm={4}>\n              <ButtonGroup>\n                <Button variant=\"success\"\n                        title={\"Open the Main Menu.\"}\n                        onClick={this.showMenu}>Menu</Button>\n              </ButtonGroup>\n            </Col>\n            <Col sm={4} className=\"sm-left\">\n              {this.state.bag.length} tiles left\n            </Col>\n          </Row>\n\n          <GoalListComponent mode={\"horizontal\"} goals={this.state.goals} pendingMove={this.pendingMove}\n                             canPlay={canPlay} board={this.state.board}/>\n        </Col>\n      </Row>\n    </div>\n    </>;\n  }\n\n  private renderPlayers() {\n    const {players} = this.state;\n    return <Row className={\"players\"}>\n      <Col xs={12} className=\"header-turn-indicator\">\n        <Col className=\"flex-grow\" />\n        <Col xs={\"auto\"}>\n        {this.itIsMyTurn ? \"Your Turn\" : `${this.currentPlayer.name}’s Turn`}\n      </Col>\n        <Col className=\"flex-grow\" />\n      </Col>\n      {players.map((player, index) => {\n        const leftSide = index < players.length / 2;\n        const image = <div className=\"flex-shrink\">\n          <Image src={zynga} roundedCircle={true}/>\n        </div>;\n        const name = player === this.myPlayer ? \"You\" : player.name;\n        const nameAndScore = <Col className=\"flex-grow\">\n          <Row className=\"name\"><Col>{name}</Col></Row>\n          <Row className=\"score\"><Col>{playerScore(player)}</Col></Row>\n        </Col>;\n        return <Col key={index} xs={12 / players.length} className={`player ${leftSide ? \"left\": \"right\"}`}>\n          <Row>\n            {leftSide && image}\n            {nameAndScore}\n            {!leftSide && image}\n          </Row>\n        </Col>;\n      })}\n    </Row>;\n  }\n\n  private renderModal() {\n    const {menuState, options, players} = this.state;\n    const {gameUrl, myPlayer} = this;\n    const qrDialog = players && players.length < 2 && options.solo === undefined;\n    if (qrDialog && gameUrl && myPlayer) {\n      return this.renderQrDialog(gameUrl, myPlayer);\n    }\n    //console.log({menuState});\n    const mainMenu = menuState.open;\n    if (mainMenu) {\n      return this.renderMainMenu();\n    }\n    return false;\n  }\n\n  private renderQrDialog(gameUrl: string, player: IPlayer) {\n    return <InviteComponent\n        gameUrl={gameUrl} playerName={player.name}\n        changePlayerName={(value) => {\n          player.name = value;\n          this.setState((state) => {\n            const players = Array(...state.players);\n            return {players};\n          });\n        }}\n        dismiss={() => this.changeOptions(() => ({solo: true}))}\n        play={() => this.changeOptions(() => ({solo: false}))}\n    />;\n  }\n\n  private renderMainMenu() {\n    const passWillResign = this.state.passers.includes(this.state.playerIndex);\n\n    return <MainMenuComponent\n        show={!!this.state.menuState.open} hide={this.hideMenu}\n\n        canPass={!this.state.over}\n        passWillEndGame={passWillResign}\n        pass={this.onPass}\n\n        canReset={this.state.reordered.length !== 0 || this.state.word.length !== 0}\n        reset={this.onReset}\n\n        {...this.canNuke()}\n        nuke={this.onNuke}\n    />;\n  }\n\n  private get gameUrl() {\n    if (this.state.gameId === undefined) {\n      return undefined;\n    }\n    return `${window.location.toString().split(\"?\").shift()}?gameId=${this.state.gameId}`;\n  }\n\n  private get pendingMove(): IPlay {\n    return {\n      type: \"play\",\n      word: this.state.word.map((tile) => ({...tile, points: this.state.reordered.includes(tile) ? 0 : tile.points})),\n      points: 0,\n      bonusPoints: 0,\n      goals: []\n    };\n  }\n\n  private onExchange = (a: string, b: string) => {\n    this.setState((state) => {\n      const aIndex = state.board.findIndex((e) => e.id === a);\n      const bIndex = state.board.findIndex((e) => e.id === b);\n      const board: ITile[] = [];\n      const reordered: ITile[] = Array(...state.reordered);\n      state.board.forEach((tile, index) => {\n        let newIndex = index;\n        if (index === aIndex) {\n          newIndex = bIndex;\n        }\n        else if (index === bIndex) {\n          newIndex = aIndex;\n        }\n        if (newIndex !== index && !reordered.includes(tile)) {\n          reordered.push(tile);\n        }\n        board[newIndex] = tile;\n      });\n      return { board, reordered, scooched: a };\n    });\n  }\n\n  private canNuke() {\n    const usedNuke = this.state.nukers.includes(this.state.playerIndex);\n    const noMoreTiles = this.state.bag.length === 0;\n    const canNuke = !usedNuke && !noMoreTiles;\n    return { usedNuke, noMoreTiles, canNuke };\n  }\n\n  private get tileSet() {\n    return getTileSet(this.state.options.tileSetName);\n  }\n\n  private changeOptions = (change: (options: IScoochOptions) => IScoochOptions) => {\n    this.setState((state) => ({options: change(state.options)}));\n  }\n\n  private resetOptions = () => {\n    this.setState({options: DEFAULT_OPTIONS});\n  }\n\n  private canSelect = (index: number) => {\n    if (this.state.word.length === 0) {\n      return true;\n    }\n    const seedTile = this.state.word[this.state.word.length - 1];\n    const seed = this.state.board.findIndex((tile) => tile === seedTile);\n    const indexRow = Math.floor(index / 4);\n    const seedRow = Math.floor(seed / 4);\n    if (indexRow === seedRow) {\n      return Math.abs(index - seed) === 1;\n    } else {\n      if (Math.abs(indexRow - seedRow) === 1) {\n        return Math.abs(index % 4 - seed % 4) <= 1;\n      }\n      return false;\n    }\n  }\n\n  private getTile(key: string) {\n    return this.state.board.find((e) => e.id === key);// || this.state.bag.find((e) => e.id === key);\n  }\n\n  private getIndex(key: string) {\n    return this.state.board.findIndex((e) => e.id === key);// || this.state.bag.find((e) => e.id === key);\n  }\n\n  private canScooch = (keyA: string, keyB?: string) => {\n    if (this.state.options.oneScoochPerTurn && this.state.scooched && ![keyA, keyB].includes(this.state.scooched)) {\n      return false;\n    }\n    const a = this.getIndex(keyA);\n    if (a < 0 || this.state.word.indexOf(this.state.board[a]) >= 0) {\n      return false;\n    }\n    if (this.state.board[a].type !== \"letter\") {\n      return false;\n    }\n    if (!keyB) {\n      return true;\n    }\n    const b = this.getIndex(keyB);\n    if (b < 0 || this.state.word.indexOf(this.state.board[b]) >= 0) {\n      return false;\n    }\n    if (this.state.board[b].type !== \"letter\") {\n      return false;\n    }\n    const indexRow = Math.floor(b / 4);\n    const seedRow = Math.floor(a / 4);\n    if (indexRow === seedRow) {\n      return Math.abs(b - a) === 1;\n    } else {\n      if (Math.abs(indexRow - seedRow) === 1) {\n        return b % 4 === a % 4;\n      }\n      return false;\n    }\n  }\n\n  private tick = () => {\n    if (this.myPlayer === undefined) { return; }\n    for (let i = this.state.board.length - 1; i >= 0; i--) {\n      const space = this.state.board[i];\n      if (space.type === \"drop\") {\n        this.setState((state) => {\n          const board = Array(...state.board);\n          const bag = Array(...state.bag);\n          i = board.indexOf(space);\n          if (i >= 0) {\n            if (state.bag.length > 0) {\n              const j = Math.floor(Math.random() * state.bag.length);\n              board[i] = bag.splice(j, 1)[0];\n              this.drop(board[i], space.drop);\n            } else {\n              board[i].type = \"space\";\n            }\n          }\n          return { bag, board, original: Array(...board) };\n        });\n        break;\n      }\n    }\n    if (this.pendingDrops.length === 0 && this.clearDrops.length > 0) {\n      while (this.clearDrops.length > 0) {\n        this.clearDrops.pop()!.drop = 0;\n      }\n      console.warn(\"tickForceUpdate\");\n      this.forceUpdate();\n      return;\n    }\n  }\n\n  private automate = () => {\n    if (this.myPlayer === undefined) { return; }\n    const { goals } = this.state;\n    if (goals.length < 3) {\n      const availableLetters = compact([...this.state.bag.map((e) => e.letter), ...this.state.board.map((e) => e.letter)]);\n      switch (Math.floor(Math.random() * 6)) {\n        case 0:\n          goals.push(new CheapskateGoal());\n          break;\n        case 1:\n          goals.push(new VerbGoal());\n          break;\n        case 2:\n          goals.push(new VerbPastGoal());\n          break;\n        case 3:\n          goals.push(new DoublesGoal(sample(\"RSTLNE\")!));\n          break;\n        case 4:\n          if (availableLetters.length > 0) {\n            goals.push(new StartsWithGoal(sample(availableLetters)!));\n          }\n          break;\n        case 5:\n          goals.push(new LengthGoal(sample([3, 4])!));\n          break;\n      }\n      this.setState({ goals: uniqBy(goals, JSON.stringify) });\n      return;\n    }\n\n    const automation = this.automation.shift();\n    if (automation) {\n      switch (automation.type) {\n        case \"tap\":\n          this.onClickItem(automation.a, false);\n          return;\n        case \"wait\":\n          return;\n        case \"nuke\":\n          this.onNuke();\n          return;\n        case \"pass\":\n          this.onPass();\n          return;\n        case \"submit\":\n          this.onPlay();\n          return;\n        default:\n          console.error({ automation });\n          return;\n      }\n    }\n\n    const {board, players, playerIndex} = this.state;\n    const { canNuke } = this.canNuke();\n    const currentPlayer = players[playerIndex];\n    if (currentPlayer.automated) {\n      if (!board.some((t)=>t.type === \"drop\")) {\n        const possibilities: Array<[number, ITile[]]> = [];\n        new WordFinder(board, 4, (word) => {\n          if (word.length >= 3) {\n            const points: number = word.map((e) => e.points).reduce((a, b) => a + b, 0);\n            possibilities.push([points, word]);\n          }\n        }).findWords();\n        possibilities.sort((a, b) => a[0] - b[0]);\n        const play = possibilities.pop();\n        //console.log({possibilities});\n        if (play !== undefined) {\n          this.automation = play[1].map((e) => ({\n            type: \"tap\",\n            a: e.id,\n          }));\n          this.automation.push({type: \"wait\"});\n          this.automation.push({type: \"submit\"})\n        } else if (canNuke) {\n          this.automation.push({type: \"nuke\"});\n        } else {\n          this.automation.push({type: \"pass\"});\n        }\n      }\n    }\n  }\n\n  private reordered = (tile: ITile) => {\n    return this.state.reordered.includes(tile);\n  }\n\n  private tilePoints = (tile: ITile): number | undefined => {\n    if (this.reordered(tile)) {\n      return undefined;\n    }\n    return tile.points;\n  }\n\n  private bonusPoints = (tile: ITile): number | undefined => {\n    if (!this.state.options.bonusForLongerWords) {\n      return undefined;\n    }\n    const index = this.state.word.indexOf(tile);\n    if (this.state.options.bonusForLongerWords === \"constant\") {\n      if (index < 4) {\n        return undefined;\n      }\n      return 1;\n    }\n    if (index < 3) {\n      return undefined;\n    }\n    return index - 2;\n  }\n\n  private tileSelected = (tile: ITile, word?: ITile[]) => {\n    if (word === undefined) {\n      word = this.state.word;\n    }\n    return word.includes(tile);\n  }\n\n  private onSmear = (key: string) => {\n    const id = key;\n    const tile = this.state.board.find((tile) => tile.id.toString() === id);\n    if (tile) {\n      const index = this.state.board.indexOf(tile);\n      if (!this.tileSelected(tile)) {\n        if (this.canSelect(index)) {\n          this.onClickItem(key, true);\n        }\n      } else {\n        const preserveIndex = this.state.word.indexOf(tile);\n        const tileToDeselect = this.state.word[preserveIndex + 1];\n        if (tileToDeselect) {\n          this.onClickItem(tileToDeselect.id, true);\n        }\n      }\n    }\n  }\n  \n  private onClickItem = (key: string, smeared: boolean = false) => {\n    const id = key;\n    const tile = this.state.board.find((tile) => tile.id.toString() === id);\n    if (tile) {\n      const index = this.state.board.indexOf(tile);\n      if (this.tileSelected(tile) || this.canSelect(index)) {\n        this.setState((state) => {\n          const word = Array(...state.word);\n          if (this.tileSelected(tile, word)) {\n            while (this.tileSelected(tile, word)) {\n              word.pop();\n            }\n          } else {\n            word.push(tile);\n          }\n          return { word, smeared };\n        });\n      }\n    }\n  }\n\n  private showMenu = () => {\n    this.setState((state) => ({menuState: {...state.menuState, open: true}}));\n  }\n\n  private hideMenu = () => {\n    this.setState((state) => ({menuState: {...state.menuState, open: false}}));\n  }\n\n  private onReset = () => {\n    this.setState((state) => {\n      return { word: [], board: state.original, reordered: [], scooched: undefined };\n    });\n  }\n\n  private onNuke = () => {\n    this.setState((state) => {\n      const board: ITile[] = [];\n      for (let j = 0; j < 16; j++) {\n        board.push({\n          type: \"drop\",\n          id: `blank-${j}`,\n        } as ITile)\n      }\n      const bag: ITile[] = Array(...state.bag);\n      state.board.forEach((tile) => {\n        if (tile.type === \"letter\") {\n          bag.push(tile);\n        }\n      });\n      const playerIndex = state.playerIndex;\n      const nukers = Array(...state.nukers);\n      nukers.push(playerIndex);\n      const players = Array(...state.players);\n      players[playerIndex].words.push({ type: \"nuke\" });\n      return { nukers, bag, board, scooched: undefined };\n    })\n  }\n\n  private onPass = () => {\n    this.setState((state) => {\n      let playerIndex = state.playerIndex;\n      const passers = Array(...state.passers);\n      if (passers.includes(playerIndex)) {\n        return { ...state, word: [], board: state.original, reordered: [], over: true };\n      } else {\n        passers.push(playerIndex);\n        const players = Array(...state.players);\n        players[playerIndex].words.push({ type: \"pass\" });\n        playerIndex = (playerIndex + 1) % state.players.length;\n        return { ...state, word: [], board: state.original, reordered: [], playerIndex, passers, scooched: undefined };\n      }\n    });\n  }\n\n  private onPlay = () => {\n    this.setState((state) => {\n      const board = Array(...state.board);\n      const word = Array(...state.word);\n      const playedWord: IPlayedTile[] = [];\n      let points = 0;\n      let bonusPoints = 0;\n      while (word.length > 0) {\n        const tile = word.pop()!;\n        const letter = tile.letter;\n        const tilePoints = this.tilePoints(tile);\n        const tileBonusPoints = this.bonusPoints(tile);\n        playedWord.unshift({ id: tile.id, letter, points: tilePoints, bonusPoints: tileBonusPoints });\n        points += (tilePoints || 0);\n        bonusPoints += (tileBonusPoints || 0);\n        let seed = board.indexOf(tile);\n        const drops: ITile[] = [];\n        while (seed >= 0) {\n          const drop = seed - 4;\n          if (drop >= 0) {\n            board[seed] = board[drop];\n            board[seed].drop++;\n          } else {\n            board[seed] = { type: \"drop\", id: `dropping-${tile.id}`, drop: board[seed].drop + 1 } as ITile;\n          }\n          drops.push(board[seed]);\n          seed = drop;\n        }\n        drops.forEach((tile) => this.drop(tile, tile.drop));\n      }\n      const players = Array(...state.players);\n      const player = players[state.playerIndex];\n      const playMove: IPlay = {\n        type: \"play\",\n        word: playedWord,\n        points,\n        bonusPoints,\n        goals: [],\n      };\n      player.words.push(playMove);\n      this.state.goals.forEach((goal) => {\n        if (goal.check(playMove)) {\n          this.announceGoal(goal);\n          playMove.goals.push(goal);\n          playMove.bonusPoints += goal.points;\n        }\n      });\n      const goals = without(this.state.goals, ...playMove.goals);\n      const playerIndex = (state.playerIndex + 1) % players.length;\n      return { board, word, players, playerIndex, original: Array(...board), reordered: [], passers: [], scooched: undefined, goals };\n    })\n  }\n\n  private pendingDrops: ITile[] = [];\n  private clearDrops: ITile[] = [];\n\n  private announceGoal(goal: IGoal) {\n    this.announce(`${goal.type} +${goal.points}`, goal.description);\n  }\n\n  private drop(tile: ITile, distance: number) {\n    this.pendingDrops.push(tile);\n    tile.drop = distance;\n    setTimeout(() => {\n      const i = this.pendingDrops.indexOf(tile);\n      this.pendingDrops.splice(i, 1)\n      this.clearDrops.push(tile);\n    }, tile.drop * 1000);\n  }\n\n  private announce(title: string, message: string) {\n    this.setState((state) => {\n      const {announcements} = state;\n      announcements.push({title, message, key: ++UID});\n      return {announcements};\n    })\n  }\n}\n\nexport default App;\n","import Modal from \"react-bootstrap/Modal\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Figure from \"react-bootstrap/Figure\";\nimport QRCode from \"qrcode.react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport React from \"react\";\nimport \"InviteComponent.css\";\nimport {phone} from \"./Globals\";\nimport {DEFAULT_PLAYER_NAME} from \"./App\";\n\ninterface IInviteComponentProps {\n    gameUrl: string;\n    playerName: string;\n\n    changePlayerName(value: string): void;\n\n    play(): void;\n\n    dismiss(): void;\n}\n\nexport default class InviteComponent extends React.Component<IInviteComponentProps> {\n    public render() {\n        const {gameUrl, playerName, changePlayerName, play, dismiss} = this.props;\n        return <Modal className={\"invite\"} backdrop={\"static\"} show={true} onHide={dismiss} scrollable={false}>\n            {\n                phone()\n                    ? <div className={\"top-spacer\"}/>\n                    : <Modal.Header closeButton={true}>\n                        <Modal.Title>\n                            Invite a Friend!\n                        </Modal.Title>\n                    </Modal.Header>\n            }\n            <Modal.Body>\n                <p>\n                    {phone() ? \"Have a friend\" : \"Have them\"} open their camera and point at this QR code.\n                    <br/>\n                    They'll join you automatically!\n                </p>\n                <Row>\n                    <Col className=\"flex-grow\"/>\n                    <Col>\n                        <Figure>\n                            <div className={\"qr\"}>\n                                <QRCode size={600} value={gameUrl}/>\n                            </div>\n                            {!phone() && <Figure.Caption>\n                                You can also copy and send them this URL:<br/>\n                                <a href={gameUrl} target=\"_blank\" rel=\"noopener noreferrer\">{gameUrl}</a>\n                            </Figure.Caption>}\n                        </Figure>\n                    </Col>\n                    <Col className=\"flex-grow\"/>\n                </Row>\n                <Row>\n                    {phone() && <Col className=\"flex-grow\"/>}\n                    <Col>\n                        <Form.Group>\n                            {!phone() && <Form.Label>Your Name</Form.Label>}\n                            <Form.Control type=\"input\" placeholder=\"Your Name\"\n                                          value={playerName === DEFAULT_PLAYER_NAME ? undefined : playerName}\n                                          onChange={changeNameThunk}/>\n                        </Form.Group>\n                    </Col>\n                    {phone() && <Col className=\"flex-grow\"/>}\n                </Row>\n            </Modal.Body>\n            {phone()\n                ? <>\n                    <Row>\n                        <Col className=\"flex-grow\"/>\n                        <Col xs={4}>\n                            <Row>\n                                <Button variant=\"success\" onClick={play} style={{width: \"100%\"}}>Play</Button>\n                            </Row>\n                        </Col>\n                        <Col className=\"flex-grow\"/>\n                    </Row>\n                    <Row>&nbsp;</Row>\n                    <Row className=\"practice\">\n                        <Col className=\"flex-grow\"/>\n                        <a onClick={dismiss}>Just Practice for Now</a>\n                        <Col className=\"flex-grow\"/>\n                    </Row>\n                </>\n                : <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={dismiss}>Solo</Button>\n                    <Button variant=\"primary\" onClick={play}>Play</Button>\n                </Modal.Footer>\n            }\n        </Modal>;\n\n        function changeNameThunk(event: any) {\n            changePlayerName(event.target.value)\n        }\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './dialogs.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}